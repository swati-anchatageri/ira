{"ast":null,"code":"import _objectSpread from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/oc-admin/ffff/chec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/oc-admin/ffff/chec/src/components/common/stats-cards/SmallStats.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DataCard from \"./DataCard\";\nimport classNames from \"classnames\";\nimport { Card, CardBody } from \"shards-react\";\nimport Chart from \"../../../utils/charts/chartPicker\";\n\nvar SmallStats = /*#__PURE__*/function (_DataCard) {\n  _inherits(SmallStats, _DataCard);\n\n  function SmallStats(props) {\n    var _this;\n\n    _classCallCheck(this, SmallStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SmallStats).call(this, props));\n    _this.state = _objectSpread({}, _this.state, {\n      cardSize: \"small\",\n      variation: _this.props.variation\n    });\n    _this.canvasRef = React.createRef();\n    _this.switchVariation = _this.switchVariation.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.drawGraph = this.drawGraph.bind(this);\n\n    return _this;\n  }\n\n  _createClass(SmallStats, [{\n    key: \"switchVariation\",\n    value: function switchVariation() {\n      this.setState(function (state) {\n        return _objectSpread({}, state, {\n          variation: state.variation === \"1\" ? \"0\" : \"1\"\n        });\n      });\n    }\n  }, {\n    key: \"drawGraph\",\n    value: function drawGraph() {\n      var ChartStuff = {\n        type: \"small\",\n        data: {\n          labels: new Array(this.props.chartData[0].data.length).fill(null),\n          datasets: this.props.chartData\n        },\n        cutoutPercentage: this.props.cutoutPct,\n        chartOptions: this.props.chartOptions\n      };\n      return Chart(ChartStuff);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          value = _this$props.value,\n          percentage = _this$props.percentage,\n          increase = _this$props.increase;\n      var variation = this.state.variation;\n      var cardStyle = this.state.error ? {\n        backgroundColor: \"#F0F0F0\"\n      } : {};\n      var cardClasses = classNames(\"stats-small\", variation && \"stats-small--\".concat(variation));\n      var cardBodyClasses = classNames(variation === \"3\" ? \"p-0 d-flex\" : \"px-0 pb-0\");\n      var innerWrapperClasses = classNames(\"d-flex\", variation === \"1\" ? \"flex-column m-auto\" : \"px-3\");\n      var dataFieldClasses = classNames(\"stats-small__data\", variation === \"1\" && \"text-center\");\n      var labelClasses = classNames(\"stats-small__label\", \"text-uppercase\", variation !== \"1\" && \"mb-1\");\n      var valueClasses = classNames(\"stats-small__value\", \"count\", variation === \"1\" ? \"my-3\" : \"m-0\");\n      var innerDataFieldClasses = classNames(\"stats-small__data\", variation !== \"1\" && \"text-right align-items-center\");\n      var percentageClasses = classNames(\"stats-small__percentage\", \"stats-small__percentage--\".concat(increase ? \"increase\" : \"decrease\"));\n      return /*#__PURE__*/React.createElement(Card, {\n        small: true,\n        className: cardClasses,\n        onClick: this.switchVariation,\n        style: cardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: cardBodyClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, this.loaded( /*#__PURE__*/React.createElement(\"div\", {\n        className: innerWrapperClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: dataFieldClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: labelClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, label), /*#__PURE__*/React.createElement(\"h6\", {\n        className: valueClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, value)), /*#__PURE__*/React.createElement(\"div\", {\n        className: innerDataFieldClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, this.loaded( /*#__PURE__*/React.createElement(\"span\", {\n        className: percentageClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }\n      }, percentage))))), this.loaded(this.drawGraph()), this.loaded(this.loadingSpinner(), false)));\n    }\n  }]);\n\n  return SmallStats;\n}(DataCard);\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\nexport default SmallStats;","map":{"version":3,"names":["React","PropTypes","DataCard","classNames","Card","CardBody","Chart","SmallStats","props","state","cardSize","variation","canvasRef","createRef","switchVariation","bind","setState","ChartStuff","type","data","labels","Array","chartData","length","fill","datasets","cutoutPercentage","cutoutPct","chartOptions","label","value","percentage","increase","cardStyle","error","backgroundColor","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","loaded","drawGraph","loadingSpinner","propTypes","string","oneOfType","number","bool","chartConfig","object","array","isRequired","chartLabels","defaultProps","Object","create"],"sources":["/home/oc-admin/ffff/chec/src/components/common/stats-cards/SmallStats.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DataCard from \"./DataCard\";\n\nimport classNames from \"classnames\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../../utils/charts/chartPicker\";\n\nclass SmallStats extends DataCard {\n  constructor(props) {\n    super(props);\n\n\tthis.state = {...this.state, cardSize: \"small\", variation: this.props.variation};\n\n\tthis.canvasRef = React.createRef();\n\t  \n\tthis.switchVariation = this.switchVariation.bind(this);\n\t//this.drawGraph = this.drawGraph.bind(this);\n  }\n\n\tswitchVariation() {\n\t\tthis.setState(state=>({...state, variation: (state.variation === \"1\" ? \"0\" : \"1\")}));\n\t}\n\t\n\tdrawGraph(){\n\t\tlet ChartStuff = {\n\t\t\ttype: \"small\",\n\t\t\tdata: {\n\t\t\t\tlabels: new Array(this.props.chartData[0].data.length).fill(null),\n\t\t\t\tdatasets: this.props.chartData\n\t\t\t},\n\t\t\tcutoutPercentage: this.props.cutoutPct,\n\t\t\tchartOptions: this.props.chartOptions\n\t\t};\n\t\t\n\t\treturn Chart(ChartStuff);\n\t}\n\n\t\n  render() {\n  \n\t  \n\t  const { label, value, percentage, increase } = this.props;\n\t  const variation = this.state.variation;\n\t  \n\t  const cardStyle = this.state.error ? {backgroundColor: \"#F0F0F0\"} : {};\n\t  \n\tconst cardClasses = classNames(\n\t  \"stats-small\",\n\t  variation && `stats-small--${variation}`\n\t);\n\n\tconst cardBodyClasses = classNames(\n\t  variation === \"3\" ? \"p-0 d-flex\" : \"px-0 pb-0\",\n\t);\n\tconst innerWrapperClasses = classNames(\n\t  \"d-flex\",\n\t  variation === \"1\" ? \"flex-column m-auto\" : \"px-3\",\n\t);\n\n\tconst dataFieldClasses = classNames(\n\t  \"stats-small__data\",\n\t  variation === \"1\" && \"text-center\"\n\t);\n\n\tconst labelClasses = classNames(\n\t  \"stats-small__label\",\n\t  \"text-uppercase\",\n\t  variation !== \"1\" && \"mb-1\"\n\t);\n\n\tconst valueClasses = classNames(\n\t  \"stats-small__value\",\n\t  \"count\",\n\t  variation === \"1\" ? \"my-3\" : \"m-0\"\n\t);\n\n\tconst innerDataFieldClasses = classNames(\n\t  \"stats-small__data\",\n\t  variation !== \"1\" && \"text-right align-items-center\"\n\t);\n\n\tconst percentageClasses = classNames(\n\t  \"stats-small__percentage\",\n\t  `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n\t);\n\t  \n\t  \n    return (\n      <Card small className={cardClasses} onClick={this.switchVariation} style={cardStyle}>\n        <CardBody className={cardBodyClasses}>\n          {this.loaded(<div className={innerWrapperClasses}>\n\t\t  \t<div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n\t\t\t\t{this.loaded(<span className={percentageClasses}>{percentage}</span>)}\n            </div>\n          </div>)}\n\t\t{this.loaded(this.drawGraph())}\n\t\t{this.loaded(this.loadingSpinner(),false)}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}